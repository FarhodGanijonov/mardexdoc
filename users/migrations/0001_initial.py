# Generated by Django 5.1.6 on 2025-04-19 12:20

import django.core.validators
import django.db.models.deletion
import users.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('job', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AbstractUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('role', models.CharField(choices=[('client', 'client'), ('worker', 'worker')], max_length=50)),
                ('gender', models.CharField(choices=[('Male', 'Erkak'), ('Female', 'Ayol')], max_length=10)),
                ('status', models.CharField(choices=[('idle', 'Bo ªsh'), ('working', 'Ishlayapti'), ('waiting_confirmation', 'Tasdiqlashni kutmoqda'), ('completed', 'Yakunlandi'), ('active', 'Faol')], default='idle', max_length=20)),
                ('full_name', models.CharField(blank=True, max_length=255, null=True)),
                ('full_name_ru', models.CharField(blank=True, max_length=255, null=True)),
                ('full_name_uz', models.CharField(blank=True, max_length=255, null=True)),
                ('full_name_en', models.CharField(blank=True, max_length=255, null=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True, unique=True)),
                ('passport_scan', models.ImageField(blank=True, null=True, upload_to=users.models.image_create_time)),
                ('passport_back_scan', models.ImageField(blank=True, null=True, upload_to=users.models.image_create_time)),
                ('passport_scan_with_face', models.ImageField(blank=True, null=True, upload_to=users.models.image_create_time)),
                ('passport_seria', models.CharField(blank=True, max_length=50, null=True)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='')),
                ('description', models.TextField(blank=True, null=True)),
                ('description_ru', models.TextField(blank=True, null=True)),
                ('description_uz', models.TextField(blank=True, null=True)),
                ('description_en', models.TextField(blank=True, null=True)),
                ('reyting', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)])),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_online', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='job.city')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('job_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='job.categoryjob')),
                ('job_id', models.ManyToManyField(blank=True, to='job.job')),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='job.region')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'ordering': ['created_at'],
            },
            managers=[
                ('objects', users.models.UserManager()),
            ],
        ),
    ]
